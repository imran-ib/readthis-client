generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                                       Int      @default(autoincrement()) @id
  email                                    String   @unique
  username                                 String   @unique
  password                                 String   @default("")
  rhandler                                 String   @unique
  firstName                                String?
  LastName                                 String?
  avatar                                   String?   @default("https://res.cloudinary.com/iib-webdevs/image/upload/v1601031013/DontDeleteMe/pngtree-businessman-user-avatar-free-vector-png-image_1538405.jpg")
  OneTimePassword                          Int?
  PasswordResetTokenExpiry                 Float?
  PasswordResetToken                       String?
  isActive                                 Boolean    @default(false)
  lastSeen                                 DateTime   @default(now())
  lastTyped                                DateTime   @default(now())
  posts                                    Post[]
  subs                                     Sub[]
  comments                                 Comment[]
  createdAt                                DateTime   @default(now())
  updatedAt                                DateTime   @updatedAt
}

model Sub {
  id                                       Int      @default(autoincrement()) @id
  name                                     String @unique
  description                              String?
  imageUrn                                 String?
  bannerUrn                                String?
  author                                   User        @relation(fields: [authorId], references: [id])
  authorId                                 Int         
  posts                                    Post        @relation(fields: [postId], references: [id])
  postId                                   Int         
  createdAt                                DateTime   @default(now())
  updatedAt                                DateTime   @updatedAt
}

model Comment {
  id                                       Int      @default(autoincrement()) @id
  text                                     String 
  body                                     String
  username                                 String
  author                                   User        @relation(fields: [authorId], references: [id])
  authorId                                 Int         
  posts                                    Post        @relation(fields: [postId], references: [id])
  postId                                   Int         
  createdAt                                DateTime   @default(now())
  updatedAt                                DateTime   @updatedAt
}


model Post {
  id                                       Int      @default(autoincrement()) @id
  author                                   User        @relation(fields: [authorId], references: [id])
  authorId                                 Int         // relation scalar field  (used in the `@relation` attribute above)
  identifier                               String 
  title                                    String 
  body                                     String? 
  slug                                     String 
  subName                                  String 
  sub                                      Sub[]
  comments                                 Comment[]
  createdAt                                DateTime   @default(now())
  updatedAt                                DateTime   @updatedAt  
}


